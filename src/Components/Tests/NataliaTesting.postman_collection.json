{
	"info": {
		"name": "GroupProject Testing",
		"_postman_id": "7df8e56f-4953-0f07-e69c-bd2a997bb1ea",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET all public decks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e39bb16c-39e0-449f-af11-6edbadff5542",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"The records should come in as an Array\", () => {",
							"    let data = pm.response.json();",
							"    ",
							"    let result = Array.isArray(data);",
							"    pm.expect(result).to.be.true;",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8080/api/public/decks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"public",
						"decks"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET Decks must be public",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2e9563c7-078a-434d-968f-f563051cd43c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"All decks should be public \", ()=> {",
							"     let data = pm.response.json();",
							"     ",
							"     for (var i=0; i< data.length; i++){",
							"        let result = data[i].public===true",
							"        pm.expect(result).to.be.true",
							"     }",
							"})",
							" "
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8080/api/public/decks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"public",
						"decks"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET all decks must have an id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d61c7b4-8dda-4fd2-80a8-4353671c4223",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"All decks must have an ID\", ()=> {",
							"     let data = pm.response.json();",
							"     ",
							"     for (var i=0; i< data.length; i++){",
							"        let result = data[i].deck_id !== null",
							"        pm.expect(result).not.to.equal(null)",
							"     }",
							"})",
							" "
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8080/api/public/decks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"public",
						"decks"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET all decks must have a name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d26a362-bf8b-481c-9f07-f34af56ce338",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"All decks must have a NAME\", ()=> {",
							"     let data = pm.response.json();",
							"     ",
							"     for (var i=0; i< data.length; i++){",
							"        let result = data[i].deck_name !== null",
							"        pm.expect(result).not.to.equal(null)",
							"     }",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8080/api/public/decks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"public",
						"decks"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET a deck by ID should return only 1 deck",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4663a34f-0485-441f-8409-27232bcdee11",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"    pm.test(\"Only 1 deck should be returned when searching by ID\", ()=> {",
							"     let data = pm.response.json();",
							"     pm.expect(data.length).to.be.eql(1);",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8080/api/deck/currentDeck/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"deck",
						"currentDeck",
						"6"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}